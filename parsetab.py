
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND ARRAY ARROW BREAK CASE CATCH CLASS COMMA COMMENT CONST CONSTRUCT CONTINUE DEFAULT DIVIDE DO DOLLAR ECHO ELSE ELSEIF EQ ERROR EXP EXTENDS FINALLY FLOAT FOR FOREACH FUNCTION GE GT IDENTICAL IDENTIFIER IF IMPLEMENTS INTEGER LBRACE LBRACKET LE LPAREN LT MINUS MOD NE NEW NEWLINE NOT NOT_IDENTICAL OR PHP_CLOSE PHP_OPEN PLUS PRIVATE PROTECTED PUBLIC RBRACE RBRACKET READLINE RETURN RPAREN SEMI SET STATIC STRING SWITCH THROW TIMES TRY TYPE USE VAR VARIABLE WHILEstatement : print SEMI\n                 | input SEMI\n                 | expression SEMI\n                 | declaration SEMI\n                 | object_declaration\n                 | class_declaration\n                 | array_declaration SEMI\n                 | property_declaration SEMI\n                 | data_structure\n                 | function_statement\n                 | function_variable\n                 | function_anonymous\n                 | class_statement\n                 | while\n                 | ifstatements : statement statements\n                | statementdeclaration : VARIABLE SET expression\n                    | VARIABLE SET conditiondata_structure : array_declaration\n                    | class_statementclass_statement : CLASS IDENTIFIER LBRACE class_body RBRACEfunction_statement : FUNCTION IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACEwhile : WHILE LPAREN expression RPAREN LBRACE statements RBRACEfunction_variable : FUNCTION VARIABLE LPAREN RPAREN LBRACE statements RBRACEprint : ECHO LPAREN expressions RPAREN\n                       | ECHO expressionsinput : VARIABLE SET READLINE LPAREN RPARENobject_declaration : VAR VARIABLE SET NEW CLASS LPAREN RPAREN SEMIarray_declaration : VARIABLE SET ARRAY LPAREN arrayArg RPARENarrayArg : index ARROW value\n                | index ARROW value arrayArg\n                | index ARROW value COMMA arrayArgif : IF LPAREN condition RPAREN LBRACE statements RBRACE SEMI\n                    | IF LPAREN condition RPAREN LBRACE statements RBRACE elseif\n                    | IF LPAREN condition RPAREN LBRACE statements RBRACE elseelse : ELSE LBRACE statements RBRACE SEMIcondition : expression comparison_operator expression\n                 | condition logical_operator conditionindex : INTEGER\n            | STRINGarrowFunction : FUNCTION LPAREN VARIABLE RPAREN ARROW expression SEMI\n                    | FUNCTION LPAREN VARIABLE RPAREN ARROW arrowFunctioncomparison_operator : LT\n                            | GT\n                            | LE\n                            | GE\n                            | EQ\n                            | NEvalue : VARIABLE\n            | INTEGER\n            | FLOAToperator : PLUS\n                | MINUS\n                | TIMES\n                | DIVIDEexpression : value operator valueexpressions : expression COMMA expressions\n                    | expressionclass_declaration : CLASS IDENTIFIER LBRACE class_body RBRACEclass_body : class_member_listclass_member_list : class_member class_member_list\n                         | class_memberclass_member : property_declaration\n                    | method_declaration\n                    | constructor_declarationproperty_declaration : visibility VARIABLEmethod_declaration : visibility FUNCTION IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACEconstructor_declaration : visibility FUNCTION CONSTRUCT LPAREN parameters RPAREN LBRACE statements RBRACEvisibility : PUBLIC\n                  | PROTECTED\n                  | PRIVATEparameters : parameter COMMA parameters\n                    | parameterparameter : TYPE VARIABLE\n                 | VARIABLEelseif : ELSEIF LPAREN condition RPAREN LBRACE statements RBRACE\n                | ELSEIF LPAREN condition RPAREN LBRACE statements RBRACE elsefunction_anonymous : FUNCTION LPAREN parameters RPAREN use_clause_opt LBRACE statements RBRACEuse_clause_opt : USE LPAREN variables RPARENvariables : VARIABLE COMMA variables\n                | VARIABLElogical_operator : AND\n                        | ORempty :'
    
_lr_action_items = {'ECHO':([0,6,7,8,10,11,12,13,14,15,16,31,32,33,34,35,36,110,117,118,119,120,125,126,129,140,142,146,149,150,153,154,155,163,164,165,174,175,177,178,],[17,-5,-6,-20,-9,-10,-11,-12,-13,-14,-15,-1,-2,-3,-4,-7,-8,-22,17,17,17,-30,17,17,17,-25,-24,-29,-23,-79,-34,-35,-36,17,17,17,17,-37,-77,-78,]),'VARIABLE':([0,6,7,8,10,11,12,13,14,15,16,17,20,22,23,28,29,30,31,32,33,34,35,36,37,41,42,43,44,45,46,51,53,54,56,64,67,76,77,78,79,80,81,82,83,84,85,94,97,110,117,118,119,120,121,125,126,127,129,134,135,140,142,146,149,150,152,153,154,155,162,163,164,165,174,175,177,178,],[18,-5,-6,-20,-9,-10,-11,-12,-13,-14,-15,40,47,49,52,-70,-71,-72,-1,-2,-3,-4,-7,-8,40,40,40,-53,-54,-55,-56,68,40,40,40,68,98,40,-44,-45,-46,-47,-48,-49,40,-83,-84,49,68,-22,18,18,18,-30,40,18,18,139,18,68,68,-25,-24,-29,-23,-79,139,-34,-35,-36,40,18,18,18,18,-37,-77,-78,]),'VAR':([0,6,7,8,10,11,12,13,14,15,16,31,32,33,34,35,36,110,117,118,119,120,125,126,129,140,142,146,149,150,153,154,155,163,164,165,174,175,177,178,],[20,-5,-6,-20,-9,-10,-11,-12,-13,-14,-15,-1,-2,-3,-4,-7,-8,-22,20,20,20,-30,20,20,20,-25,-24,-29,-23,-79,-34,-35,-36,20,20,20,20,-37,-77,-78,]),'CLASS':([0,6,7,8,10,11,12,13,14,15,16,31,32,33,34,35,36,87,110,117,118,119,120,125,126,129,140,142,146,149,150,153,154,155,163,164,165,174,175,177,178,],[21,-5,-6,-20,-9,-10,-11,-12,-13,-14,-15,-1,-2,-3,-4,-7,-8,109,-22,21,21,21,-30,21,21,21,-25,-24,-29,-23,-79,-34,-35,-36,21,21,21,21,-37,-77,-78,]),'FUNCTION':([0,6,7,8,10,11,12,13,14,15,16,28,29,30,31,32,33,34,35,36,94,110,117,118,119,120,125,126,129,140,142,146,149,150,153,154,155,163,164,165,174,175,177,178,],[23,-5,-6,-20,-9,-10,-11,-12,-13,-14,-15,-70,-71,-72,-1,-2,-3,-4,-7,-8,112,-22,23,23,23,-30,23,23,23,-25,-24,-29,-23,-79,-34,-35,-36,23,23,23,23,-37,-77,-78,]),'WHILE':([0,6,7,8,10,11,12,13,14,15,16,31,32,33,34,35,36,110,117,118,119,120,125,126,129,140,142,146,149,150,153,154,155,163,164,165,174,175,177,178,],[24,-5,-6,-20,-9,-10,-11,-12,-13,-14,-15,-1,-2,-3,-4,-7,-8,-22,24,24,24,-30,24,24,24,-25,-24,-29,-23,-79,-34,-35,-36,24,24,24,24,-37,-77,-78,]),'IF':([0,6,7,8,10,11,12,13,14,15,16,31,32,33,34,35,36,110,117,118,119,120,125,126,129,140,142,146,149,150,153,154,155,163,164,165,174,175,177,178,],[25,-5,-6,-20,-9,-10,-11,-12,-13,-14,-15,-1,-2,-3,-4,-7,-8,-22,25,25,25,-30,25,25,25,-25,-24,-29,-23,-79,-34,-35,-36,25,25,25,25,-37,-77,-78,]),'INTEGER':([0,6,7,8,10,11,12,13,14,15,16,17,26,27,31,32,33,34,35,36,37,40,41,42,43,44,45,46,53,54,56,76,77,78,79,80,81,82,83,84,85,86,110,117,118,119,120,121,125,126,129,132,140,142,145,146,149,150,153,154,155,162,163,164,165,174,175,177,178,],[26,-5,-6,-20,-9,-10,-11,-12,-13,-14,-15,26,-51,-52,-1,-2,-3,-4,-7,-8,26,-50,26,26,-53,-54,-55,-56,26,26,26,26,-44,-45,-46,-47,-48,-49,26,-83,-84,107,-22,26,26,26,-30,26,26,26,26,107,-25,-24,107,-29,-23,-79,-34,-35,-36,26,26,26,26,26,-37,-77,-78,]),'FLOAT':([0,6,7,8,10,11,12,13,14,15,16,17,31,32,33,34,35,36,37,41,42,43,44,45,46,53,54,56,76,77,78,79,80,81,82,83,84,85,110,117,118,119,120,121,125,126,129,140,142,146,149,150,153,154,155,162,163,164,165,174,175,177,178,],[27,-5,-6,-20,-9,-10,-11,-12,-13,-14,-15,27,-1,-2,-3,-4,-7,-8,27,27,27,-53,-54,-55,-56,27,27,27,27,-44,-45,-46,-47,-48,-49,27,-83,-84,-22,27,27,27,-30,27,27,27,27,-25,-24,-29,-23,-79,-34,-35,-36,27,27,27,27,27,-37,-77,-78,]),'PUBLIC':([0,6,7,8,10,11,12,13,14,15,16,31,32,33,34,35,36,49,63,90,91,92,93,110,117,118,119,120,125,126,129,140,142,146,149,150,153,154,155,163,164,165,172,173,174,175,177,178,],[28,-5,-6,-20,-9,-10,-11,-12,-13,-14,-15,-1,-2,-3,-4,-7,-8,-67,28,28,-64,-65,-66,-22,28,28,28,-30,28,28,28,-25,-24,-29,-23,-79,-34,-35,-36,28,28,28,-68,-69,28,-37,-77,-78,]),'PROTECTED':([0,6,7,8,10,11,12,13,14,15,16,31,32,33,34,35,36,49,63,90,91,92,93,110,117,118,119,120,125,126,129,140,142,146,149,150,153,154,155,163,164,165,172,173,174,175,177,178,],[29,-5,-6,-20,-9,-10,-11,-12,-13,-14,-15,-1,-2,-3,-4,-7,-8,-67,29,29,-64,-65,-66,-22,29,29,29,-30,29,29,29,-25,-24,-29,-23,-79,-34,-35,-36,29,29,29,-68,-69,29,-37,-77,-78,]),'PRIVATE':([0,6,7,8,10,11,12,13,14,15,16,31,32,33,34,35,36,49,63,90,91,92,93,110,117,118,119,120,125,126,129,140,142,146,149,150,153,154,155,163,164,165,172,173,174,175,177,178,],[30,-5,-6,-20,-9,-10,-11,-12,-13,-14,-15,-1,-2,-3,-4,-7,-8,-67,30,30,-64,-65,-66,-22,30,30,30,-30,30,30,30,-25,-24,-29,-23,-79,-34,-35,-36,30,30,30,-68,-69,30,-37,-77,-78,]),'$end':([1,6,7,8,10,11,12,13,14,15,16,31,32,33,34,35,36,110,120,140,142,146,149,150,153,154,155,175,177,178,],[0,-5,-6,-20,-9,-10,-11,-12,-13,-14,-15,-1,-2,-3,-4,-7,-8,-22,-30,-25,-24,-29,-23,-79,-34,-35,-36,-37,-77,-78,]),'SEMI':([2,3,4,5,8,9,26,27,38,39,40,49,58,59,61,73,74,102,103,104,120,133,143,171,],[31,32,33,34,35,36,-51,-52,-27,-59,-50,-67,-18,-19,-57,-26,-58,-28,-38,-39,-30,146,153,175,]),'RBRACE':([6,7,8,10,11,12,13,14,15,16,31,32,33,34,35,36,49,88,89,90,91,92,93,110,111,120,128,129,130,131,136,137,140,141,142,146,149,150,153,154,155,167,168,169,172,173,175,176,177,178,],[-5,-6,-20,-9,-10,-11,-12,-13,-14,-15,-1,-2,-3,-4,-7,-8,-67,110,-61,-63,-64,-65,-66,-22,-62,-30,140,-17,142,143,149,150,-25,-16,-24,-29,-23,-79,-34,-35,-36,171,172,173,-68,-69,-37,177,-77,-78,]),'LPAREN':([17,23,24,25,50,52,57,60,109,115,123,124,156,],[37,51,53,54,64,69,75,86,122,127,134,135,162,]),'SET':([18,47,],[41,62,]),'PLUS':([18,19,26,27,40,],[-50,43,-51,-52,-50,]),'MINUS':([18,19,26,27,40,],[-50,44,-51,-52,-50,]),'TIMES':([18,19,26,27,40,],[-50,45,-51,-52,-50,]),'DIVIDE':([18,19,26,27,40,],[-50,46,-51,-52,-50,]),'IDENTIFIER':([21,23,112,],[48,50,123,]),'COMMA':([26,27,39,40,61,66,68,98,132,139,],[-51,-52,56,-50,-57,97,-76,-75,145,152,]),'RPAREN':([26,27,39,40,55,61,65,66,68,69,70,71,74,75,95,98,103,104,105,116,122,132,138,139,144,147,148,158,161,166,],[-51,-52,-59,-50,73,-57,96,-74,-76,99,100,101,-58,102,113,-75,-38,-39,120,-73,133,-31,151,-82,-32,159,160,-33,-81,170,]),'LT':([26,27,40,58,61,72,],[-51,-52,-50,77,-57,77,]),'GT':([26,27,40,58,61,72,],[-51,-52,-50,78,-57,78,]),'LE':([26,27,40,58,61,72,],[-51,-52,-50,79,-57,79,]),'GE':([26,27,40,58,61,72,],[-51,-52,-50,80,-57,80,]),'EQ':([26,27,40,58,61,72,],[-51,-52,-50,81,-57,81,]),'NE':([26,27,40,58,61,72,],[-51,-52,-50,82,-57,82,]),'AND':([26,27,40,59,61,71,103,104,166,],[-51,-52,-50,84,-57,84,-38,84,84,]),'OR':([26,27,40,59,61,71,103,104,166,],[-51,-52,-50,85,-57,85,-38,85,85,]),'STRING':([26,27,40,86,132,145,],[-51,-52,-50,108,108,108,]),'READLINE':([41,],[57,]),'ARRAY':([41,],[60,]),'LBRACE':([48,99,100,101,113,114,151,157,159,160,170,],[63,117,118,119,125,126,-80,163,164,165,174,]),'TYPE':([51,64,97,134,135,],[67,67,67,67,67,]),'NEW':([62,],[87,]),'USE':([96,],[115,]),'ARROW':([106,107,108,],[121,-40,-41,]),'CONSTRUCT':([112,],[124,]),'ELSEIF':([143,],[156,]),'ELSE':([143,177,],[157,157,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statement':([0,117,118,119,125,126,129,163,164,165,174,],[1,129,129,129,129,129,129,129,129,129,129,]),'print':([0,117,118,119,125,126,129,163,164,165,174,],[2,2,2,2,2,2,2,2,2,2,2,]),'input':([0,117,118,119,125,126,129,163,164,165,174,],[3,3,3,3,3,3,3,3,3,3,3,]),'expression':([0,17,37,41,53,54,56,76,83,117,118,119,125,126,129,162,163,164,165,174,],[4,39,39,58,70,72,39,103,72,4,4,4,4,4,4,72,4,4,4,4,]),'declaration':([0,117,118,119,125,126,129,163,164,165,174,],[5,5,5,5,5,5,5,5,5,5,5,]),'object_declaration':([0,117,118,119,125,126,129,163,164,165,174,],[6,6,6,6,6,6,6,6,6,6,6,]),'class_declaration':([0,117,118,119,125,126,129,163,164,165,174,],[7,7,7,7,7,7,7,7,7,7,7,]),'array_declaration':([0,117,118,119,125,126,129,163,164,165,174,],[8,8,8,8,8,8,8,8,8,8,8,]),'property_declaration':([0,63,90,117,118,119,125,126,129,163,164,165,174,],[9,91,91,9,9,9,9,9,9,9,9,9,9,]),'data_structure':([0,117,118,119,125,126,129,163,164,165,174,],[10,10,10,10,10,10,10,10,10,10,10,]),'function_statement':([0,117,118,119,125,126,129,163,164,165,174,],[11,11,11,11,11,11,11,11,11,11,11,]),'function_variable':([0,117,118,119,125,126,129,163,164,165,174,],[12,12,12,12,12,12,12,12,12,12,12,]),'function_anonymous':([0,117,118,119,125,126,129,163,164,165,174,],[13,13,13,13,13,13,13,13,13,13,13,]),'class_statement':([0,117,118,119,125,126,129,163,164,165,174,],[14,14,14,14,14,14,14,14,14,14,14,]),'while':([0,117,118,119,125,126,129,163,164,165,174,],[15,15,15,15,15,15,15,15,15,15,15,]),'if':([0,117,118,119,125,126,129,163,164,165,174,],[16,16,16,16,16,16,16,16,16,16,16,]),'value':([0,17,37,41,42,53,54,56,76,83,117,118,119,121,125,126,129,162,163,164,165,174,],[19,19,19,19,61,19,19,19,19,19,19,19,19,132,19,19,19,19,19,19,19,19,]),'visibility':([0,63,90,117,118,119,125,126,129,163,164,165,174,],[22,94,94,22,22,22,22,22,22,22,22,22,22,]),'expressions':([17,37,56,],[38,55,74,]),'operator':([19,],[42,]),'condition':([41,54,83,162,],[59,71,104,166,]),'parameters':([51,64,97,134,135,],[65,95,116,147,148,]),'parameter':([51,64,97,134,135,],[66,66,66,66,66,]),'comparison_operator':([58,72,],[76,76,]),'logical_operator':([59,71,104,166,],[83,83,83,83,]),'class_body':([63,],[88,]),'class_member_list':([63,90,],[89,111,]),'class_member':([63,90,],[90,90,]),'method_declaration':([63,90,],[92,92,]),'constructor_declaration':([63,90,],[93,93,]),'arrayArg':([86,132,145,],[105,144,158,]),'index':([86,132,145,],[106,106,106,]),'use_clause_opt':([96,],[114,]),'statements':([117,118,119,125,126,129,163,164,165,174,],[128,130,131,136,137,141,167,168,169,176,]),'variables':([127,152,],[138,161,]),'elseif':([143,],[154,]),'else':([143,177,],[155,178,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement","S'",1,None,None,None),
  ('statement -> print SEMI','statement',2,'p_statement','parser.py',10),
  ('statement -> input SEMI','statement',2,'p_statement','parser.py',11),
  ('statement -> expression SEMI','statement',2,'p_statement','parser.py',12),
  ('statement -> declaration SEMI','statement',2,'p_statement','parser.py',13),
  ('statement -> object_declaration','statement',1,'p_statement','parser.py',14),
  ('statement -> class_declaration','statement',1,'p_statement','parser.py',15),
  ('statement -> array_declaration SEMI','statement',2,'p_statement','parser.py',16),
  ('statement -> property_declaration SEMI','statement',2,'p_statement','parser.py',17),
  ('statement -> data_structure','statement',1,'p_statement','parser.py',18),
  ('statement -> function_statement','statement',1,'p_statement','parser.py',19),
  ('statement -> function_variable','statement',1,'p_statement','parser.py',20),
  ('statement -> function_anonymous','statement',1,'p_statement','parser.py',21),
  ('statement -> class_statement','statement',1,'p_statement','parser.py',22),
  ('statement -> while','statement',1,'p_statement','parser.py',23),
  ('statement -> if','statement',1,'p_statement','parser.py',24),
  ('statements -> statement statements','statements',2,'p_statements','parser.py',27),
  ('statements -> statement','statements',1,'p_statements','parser.py',28),
  ('declaration -> VARIABLE SET expression','declaration',3,'p_declaration','parser.py',31),
  ('declaration -> VARIABLE SET condition','declaration',3,'p_declaration','parser.py',32),
  ('data_structure -> array_declaration','data_structure',1,'p_data_structure','parser.py',36),
  ('data_structure -> class_statement','data_structure',1,'p_data_structure','parser.py',37),
  ('class_statement -> CLASS IDENTIFIER LBRACE class_body RBRACE','class_statement',5,'p_class_statement','parser.py',40),
  ('function_statement -> FUNCTION IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE','function_statement',8,'p_function_statement','parser.py',44),
  ('while -> WHILE LPAREN expression RPAREN LBRACE statements RBRACE','while',7,'p_while','parser.py',49),
  ('function_variable -> FUNCTION VARIABLE LPAREN RPAREN LBRACE statements RBRACE','function_variable',7,'p_function_variable','parser.py',54),
  ('print -> ECHO LPAREN expressions RPAREN','print',4,'p_print','parser.py',59),
  ('print -> ECHO expressions','print',2,'p_print','parser.py',60),
  ('input -> VARIABLE SET READLINE LPAREN RPAREN','input',5,'p_input','parser.py',65),
  ('object_declaration -> VAR VARIABLE SET NEW CLASS LPAREN RPAREN SEMI','object_declaration',8,'p_object_declaration','parser.py',69),
  ('array_declaration -> VARIABLE SET ARRAY LPAREN arrayArg RPAREN','array_declaration',6,'p_array_declaration','parser.py',78),
  ('arrayArg -> index ARROW value','arrayArg',3,'p_arrayArg','parser.py',82),
  ('arrayArg -> index ARROW value arrayArg','arrayArg',4,'p_arrayArg','parser.py',83),
  ('arrayArg -> index ARROW value COMMA arrayArg','arrayArg',5,'p_arrayArg','parser.py',84),
  ('if -> IF LPAREN condition RPAREN LBRACE statements RBRACE SEMI','if',8,'p_if','parser.py',89),
  ('if -> IF LPAREN condition RPAREN LBRACE statements RBRACE elseif','if',8,'p_if','parser.py',90),
  ('if -> IF LPAREN condition RPAREN LBRACE statements RBRACE else','if',8,'p_if','parser.py',91),
  ('else -> ELSE LBRACE statements RBRACE SEMI','else',5,'p_else','parser.py',95),
  ('condition -> expression comparison_operator expression','condition',3,'p_condition','parser.py',99),
  ('condition -> condition logical_operator condition','condition',3,'p_condition','parser.py',100),
  ('index -> INTEGER','index',1,'p_index','parser.py',108),
  ('index -> STRING','index',1,'p_index','parser.py',109),
  ('arrowFunction -> FUNCTION LPAREN VARIABLE RPAREN ARROW expression SEMI','arrowFunction',7,'p_arrowFunction','parser.py',114),
  ('arrowFunction -> FUNCTION LPAREN VARIABLE RPAREN ARROW arrowFunction','arrowFunction',6,'p_arrowFunction','parser.py',115),
  ('comparison_operator -> LT','comparison_operator',1,'p_comparison_operator','parser.py',120),
  ('comparison_operator -> GT','comparison_operator',1,'p_comparison_operator','parser.py',121),
  ('comparison_operator -> LE','comparison_operator',1,'p_comparison_operator','parser.py',122),
  ('comparison_operator -> GE','comparison_operator',1,'p_comparison_operator','parser.py',123),
  ('comparison_operator -> EQ','comparison_operator',1,'p_comparison_operator','parser.py',124),
  ('comparison_operator -> NE','comparison_operator',1,'p_comparison_operator','parser.py',125),
  ('value -> VARIABLE','value',1,'p_value','parser.py',129),
  ('value -> INTEGER','value',1,'p_value','parser.py',130),
  ('value -> FLOAT','value',1,'p_value','parser.py',131),
  ('operator -> PLUS','operator',1,'p_operator','parser.py',140),
  ('operator -> MINUS','operator',1,'p_operator','parser.py',141),
  ('operator -> TIMES','operator',1,'p_operator','parser.py',142),
  ('operator -> DIVIDE','operator',1,'p_operator','parser.py',143),
  ('expression -> value operator value','expression',3,'p_expression','parser.py',146),
  ('expressions -> expression COMMA expressions','expressions',3,'p_expressions','parser.py',150),
  ('expressions -> expression','expressions',1,'p_expressions','parser.py',151),
  ('class_declaration -> CLASS IDENTIFIER LBRACE class_body RBRACE','class_declaration',5,'p_class_declaration','parser.py',154),
  ('class_body -> class_member_list','class_body',1,'p_class_body','parser.py',158),
  ('class_member_list -> class_member class_member_list','class_member_list',2,'p_class_member_list','parser.py',162),
  ('class_member_list -> class_member','class_member_list',1,'p_class_member_list','parser.py',163),
  ('class_member -> property_declaration','class_member',1,'p_class_member','parser.py',167),
  ('class_member -> method_declaration','class_member',1,'p_class_member','parser.py',168),
  ('class_member -> constructor_declaration','class_member',1,'p_class_member','parser.py',169),
  ('property_declaration -> visibility VARIABLE','property_declaration',2,'p_property_declaration','parser.py',173),
  ('method_declaration -> visibility FUNCTION IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE','method_declaration',9,'p_method_declaration','parser.py',177),
  ('constructor_declaration -> visibility FUNCTION CONSTRUCT LPAREN parameters RPAREN LBRACE statements RBRACE','constructor_declaration',9,'p_constructor_declaration','parser.py',181),
  ('visibility -> PUBLIC','visibility',1,'p_visibility','parser.py',185),
  ('visibility -> PROTECTED','visibility',1,'p_visibility','parser.py',186),
  ('visibility -> PRIVATE','visibility',1,'p_visibility','parser.py',187),
  ('parameters -> parameter COMMA parameters','parameters',3,'p_parameters','parser.py',191),
  ('parameters -> parameter','parameters',1,'p_parameters','parser.py',192),
  ('parameter -> TYPE VARIABLE','parameter',2,'p_parameter','parser.py',196),
  ('parameter -> VARIABLE','parameter',1,'p_parameter','parser.py',197),
  ('elseif -> ELSEIF LPAREN condition RPAREN LBRACE statements RBRACE','elseif',7,'p_elseif','parser.py',202),
  ('elseif -> ELSEIF LPAREN condition RPAREN LBRACE statements RBRACE else','elseif',8,'p_elseif','parser.py',203),
  ('function_anonymous -> FUNCTION LPAREN parameters RPAREN use_clause_opt LBRACE statements RBRACE','function_anonymous',8,'p_function_anonymous','parser.py',208),
  ('use_clause_opt -> USE LPAREN variables RPAREN','use_clause_opt',4,'p_use_clause_opt','parser.py',212),
  ('variables -> VARIABLE COMMA variables','variables',3,'p_variables','parser.py',216),
  ('variables -> VARIABLE','variables',1,'p_variables','parser.py',217),
  ('logical_operator -> AND','logical_operator',1,'p_logical_operator','parser.py',221),
  ('logical_operator -> OR','logical_operator',1,'p_logical_operator','parser.py',222),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',227),
]
