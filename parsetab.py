
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND ARRAY ARROW CATCH CLASS COMMA COMMENT CONST CONSTRUCT DEFINE DIVIDE DOLLAR ECHO ELSE ELSEIF EQ ERROR EXCEPTION EXP FLOAT FOR FUNCTION GE GT IDENTICAL IDENTIFIER IF INTEGER LBRACE LBRACKET LE LPAREN LT MINUS MOD NE NEW NEWLINE NOT NOT_IDENTICAL OR PHP_CLOSE PHP_OPEN PLUS PRIVATE PROTECTED PUBLIC RBRACE RBRACKET READLINE RETURN RPAREN SEMI SET STATIC STRING THROW TIMES TRY TYPE USE VAR VARIABLE WHILEstatement : print SEMI\n                 | print_error\n                 | declaration SEMI\n                 | input SEMI\n                 | expression SEMI\n                 | object_declaration\n                 | class_declaration\n                 | array_declaration SEMI\n                 | property_declaration SEMI\n                 | function_statement\n                 | function_variable\n                 | function_anonymous\n                 | function_arrow\n                 | while\n                 | constant_declaration\n                 | constant_use\n                 | try_catch\n                 | catch_item\n                 | ifstatements : statement statements\n                | statement\n                | emptydeclaration : VARIABLE SET value\n                    | VARIABLE SET STRING\n                    | VARIABLE SET expression\n                    | VARIABLE SET conditionfunction_statement : visibility FUNCTION IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACEwhile : WHILE LPAREN condition RPAREN LBRACE statements RBRACEfunction_variable : FUNCTION VARIABLE LPAREN RPAREN LBRACE statements RBRACEprint : ECHO LPAREN value RPAREN\n            | ECHO value\n            | ECHO LPAREN STRING RPAREN\n            | ECHO STRINGprint_error : ECHO errorinput : VARIABLE SET READLINE LPAREN STRING RPARENobject_declaration : VAR VARIABLE SET NEW CLASS LPAREN RPAREN SEMIarray_declaration : VARIABLE SET ARRAY LPAREN arrayArg RPAREN\n                        | VARIABLE SET ARRAY LPAREN empty RPARENarrayArg : index ARROW value\n                | index ARROW value arrayArg\n                | index ARROW value COMMA arrayArgif : IF LPAREN condition RPAREN LBRACE statements RBRACE SEMI\n            | IF LPAREN conditions RPAREN LBRACE statements RBRACE SEMI\n            | IF LPAREN condition RPAREN LBRACE statements RBRACE elseif\n            | IF LPAREN condition RPAREN LBRACE statements RBRACE elseelse : ELSE LBRACE statements RBRACE SEMIcondition : value comparison_operator valueconditions : LBRACE condition RBRACE logical_operator conditions\n                    | LBRACE condition RBRACEindex : INTEGER\n            | STRINGfunction_arrow : VARIABLE SET FUNCTION LPAREN VARIABLE RPAREN ARROW expression SEMI\n                    | FUNCTION LPAREN VARIABLE RPAREN ARROW function_arrowcomparison_operator : LT\n                            | GT\n                            | LE\n                            | GE\n                            | EQ\n                            | NEvalue : VARIABLE\n            | INTEGER\n            | constant_use\n            | FLOAToperator : PLUS\n                | MINUS\n                | TIMES\n                | DIVIDEexpression : value operator value\n                  | valueexpressions : expression COMMA expressions\n                    | expressionclass_declaration : CLASS IDENTIFIER LBRACE class_body RBRACEclass_body : class_member_listclass_member_list : class_member class_member_list\n                         | class_memberclass_member : property_declaration\n                    | method_declaration\n                    | constructor_declarationconstant_declaration : DEFINE LPAREN STRING COMMA expression RPAREN SEMI\n                            | CONST IDENTIFIER SET expression SEMIconstant_use : IDENTIFIERtry_catch : TRY LBRACE statements RBRACE catch_listcatch_list : catch_item catch_list\n                  | emptycatch_item : CATCH LPAREN EXCEPTION VARIABLE RPAREN LBRACE statements RBRACEproperty_declaration : visibility VARIABLEmethod_declaration : visibility FUNCTION IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACEconstructor_declaration : visibility FUNCTION CONSTRUCT LPAREN parameters RPAREN LBRACE statements RBRACEvisibility : PUBLIC\n                  | PROTECTED\n                  | PRIVATEparameters : parameter COMMA parameters\n                    | parameter\n                    | IDENTIFIER\n                    | emptyparameter : TYPE VARIABLE\n                 | VARIABLEelseif : ELSEIF LPAREN condition RPAREN LBRACE statements RBRACE elseif\n                | ELSEIF LPAREN condition RPAREN LBRACE statements RBRACE elsefunction_anonymous : FUNCTION LPAREN parameters RPAREN use_clause_opt LBRACE statements RBRACEuse_clause_opt : USE LPAREN variables RPARENvariables : VARIABLE COMMA variables\n                | VARIABLElogical_operator : AND\n                        | ORempty :'
    
_lr_action_items = {'ECHO':([0,3,7,8,11,12,13,14,15,16,17,18,19,20,26,40,41,42,43,44,45,49,67,95,130,145,150,155,157,158,159,160,162,164,175,179,182,183,194,195,201,202,210,214,218,219,220,221,224,226,229,232,233,234,243,244,247,248,],[21,-2,-6,-7,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-81,-1,-3,-4,-5,-8,-9,-34,21,21,-106,-72,21,21,-80,-82,-106,-84,21,21,21,-53,-83,21,21,-29,-28,-79,-36,-100,-85,-42,-44,-45,-43,-52,-27,21,21,21,21,-46,-98,-99,]),'VARIABLE':([0,3,7,8,11,12,13,14,15,16,17,18,19,20,21,24,26,27,28,37,38,39,40,41,42,43,44,45,46,49,52,53,54,55,56,57,63,64,67,69,89,93,95,97,99,103,104,105,106,107,108,109,112,120,121,125,128,130,145,150,153,155,157,158,159,160,162,164,168,175,176,179,182,183,190,192,193,194,195,199,201,202,210,214,216,218,219,220,221,224,226,229,231,232,233,234,243,244,247,248,],[23,-2,-6,-7,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,50,58,-81,60,62,-89,-90,-91,-1,-3,-4,-5,-8,-9,50,-34,50,-64,-65,-66,-67,50,85,50,23,50,126,50,23,132,50,50,-54,-55,-56,-57,-58,-59,143,60,149,149,50,-106,-72,23,178,23,-80,-82,-106,-84,23,23,50,23,198,-53,-83,23,50,149,149,23,-29,217,-28,-79,-36,-100,198,-85,-42,-44,-45,-43,-52,-27,50,23,23,23,23,-46,-98,-99,]),'VAR':([0,3,7,8,11,12,13,14,15,16,17,18,19,20,26,40,41,42,43,44,45,49,67,95,130,145,150,155,157,158,159,160,162,164,175,179,182,183,194,195,201,202,210,214,218,219,220,221,224,226,229,232,233,234,243,244,247,248,],[24,-2,-6,-7,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-81,-1,-3,-4,-5,-8,-9,-34,24,24,-106,-72,24,24,-80,-82,-106,-84,24,24,24,-53,-83,24,24,-29,-28,-79,-36,-100,-85,-42,-44,-45,-43,-52,-27,24,24,24,24,-46,-98,-99,]),'CLASS':([0,3,7,8,11,12,13,14,15,16,17,18,19,20,26,40,41,42,43,44,45,49,67,95,113,130,145,150,155,157,158,159,160,162,164,175,179,182,183,194,195,201,202,210,214,218,219,220,221,224,226,229,232,233,234,243,244,247,248,],[25,-2,-6,-7,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-81,-1,-3,-4,-5,-8,-9,-34,25,25,144,-106,-72,25,25,-80,-82,-106,-84,25,25,25,-53,-83,25,25,-29,-28,-79,-36,-100,-85,-42,-44,-45,-43,-52,-27,25,25,25,25,-46,-98,-99,]),'FUNCTION':([0,3,7,8,11,12,13,14,15,16,17,18,19,20,26,27,37,38,39,40,41,42,43,44,45,49,57,67,95,120,130,145,150,153,155,157,158,159,160,162,164,175,179,182,183,194,195,200,201,202,210,214,218,219,220,221,224,226,229,232,233,234,243,244,247,248,],[28,-2,-6,-7,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-81,61,-89,-90,-91,-1,-3,-4,-5,-8,-9,-34,79,28,28,147,-106,-72,28,177,28,-80,-82,-106,-84,28,28,28,-53,-83,28,28,-29,79,-28,-79,-36,-100,-85,-42,-44,-45,-43,-52,-27,28,28,28,28,-46,-98,-99,]),'WHILE':([0,3,7,8,11,12,13,14,15,16,17,18,19,20,26,40,41,42,43,44,45,49,67,95,130,145,150,155,157,158,159,160,162,164,175,179,182,183,194,195,201,202,210,214,218,219,220,221,224,226,229,232,233,234,243,244,247,248,],[29,-2,-6,-7,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-81,-1,-3,-4,-5,-8,-9,-34,29,29,-106,-72,29,29,-80,-82,-106,-84,29,29,29,-53,-83,29,29,-29,-28,-79,-36,-100,-85,-42,-44,-45,-43,-52,-27,29,29,29,29,-46,-98,-99,]),'DEFINE':([0,3,7,8,11,12,13,14,15,16,17,18,19,20,26,40,41,42,43,44,45,49,67,95,130,145,150,155,157,158,159,160,162,164,175,179,182,183,194,195,201,202,210,214,218,219,220,221,224,226,229,232,233,234,243,244,247,248,],[30,-2,-6,-7,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-81,-1,-3,-4,-5,-8,-9,-34,30,30,-106,-72,30,30,-80,-82,-106,-84,30,30,30,-53,-83,30,30,-29,-28,-79,-36,-100,-85,-42,-44,-45,-43,-52,-27,30,30,30,30,-46,-98,-99,]),'CONST':([0,3,7,8,11,12,13,14,15,16,17,18,19,20,26,40,41,42,43,44,45,49,67,95,130,145,150,155,157,158,159,160,162,164,175,179,182,183,194,195,201,202,210,214,218,219,220,221,224,226,229,232,233,234,243,244,247,248,],[31,-2,-6,-7,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-81,-1,-3,-4,-5,-8,-9,-34,31,31,-106,-72,31,31,-80,-82,-106,-84,31,31,31,-53,-83,31,31,-29,-28,-79,-36,-100,-85,-42,-44,-45,-43,-52,-27,31,31,31,31,-46,-98,-99,]),'IDENTIFIER':([0,3,7,8,11,12,13,14,15,16,17,18,19,20,21,25,26,31,40,41,42,43,44,45,46,49,52,53,54,55,56,57,61,63,64,67,69,93,95,99,103,104,105,106,107,108,109,121,125,128,130,145,147,150,155,157,158,159,160,162,164,168,175,179,182,183,190,192,193,194,195,201,202,210,214,218,219,220,221,224,226,229,231,232,233,234,243,244,247,248,],[26,-2,-6,-7,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,26,59,-81,66,-1,-3,-4,-5,-8,-9,26,-34,26,-64,-65,-66,-67,26,82,87,26,26,26,26,26,26,26,-54,-55,-56,-57,-58,-59,87,87,26,-106,-72,171,26,26,-80,-82,-106,-84,26,26,26,26,-53,-83,26,26,87,87,26,-29,-28,-79,-36,-100,-85,-42,-44,-45,-43,-52,-27,26,26,26,26,26,-46,-98,-99,]),'TRY':([0,3,7,8,11,12,13,14,15,16,17,18,19,20,26,40,41,42,43,44,45,49,67,95,130,145,150,155,157,158,159,160,162,164,175,179,182,183,194,195,201,202,210,214,218,219,220,221,224,226,229,232,233,234,243,244,247,248,],[32,-2,-6,-7,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-81,-1,-3,-4,-5,-8,-9,-34,32,32,-106,-72,32,32,-80,-82,-106,-84,32,32,32,-53,-83,32,32,-29,-28,-79,-36,-100,-85,-42,-44,-45,-43,-52,-27,32,32,32,32,-46,-98,-99,]),'CATCH':([0,3,7,8,11,12,13,14,15,16,17,18,19,20,26,40,41,42,43,44,45,49,67,95,130,145,150,155,157,158,159,160,162,164,175,179,182,183,194,195,201,202,210,214,218,219,220,221,224,226,229,232,233,234,243,244,247,248,],[33,-2,-6,-7,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-81,-1,-3,-4,-5,-8,-9,-34,33,33,33,-72,33,33,-80,-82,33,-84,33,33,33,-53,-83,33,33,-29,-28,-79,-36,-100,-85,-42,-44,-45,-43,-52,-27,33,33,33,33,-46,-98,-99,]),'IF':([0,3,7,8,11,12,13,14,15,16,17,18,19,20,26,40,41,42,43,44,45,49,67,95,130,145,150,155,157,158,159,160,162,164,175,179,182,183,194,195,201,202,210,214,218,219,220,221,224,226,229,232,233,234,243,244,247,248,],[34,-2,-6,-7,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-81,-1,-3,-4,-5,-8,-9,-34,34,34,-106,-72,34,34,-80,-82,-106,-84,34,34,34,-53,-83,34,34,-29,-28,-79,-36,-100,-85,-42,-44,-45,-43,-52,-27,34,34,34,34,-46,-98,-99,]),'INTEGER':([0,3,7,8,11,12,13,14,15,16,17,18,19,20,21,26,35,36,40,41,42,43,44,45,46,49,50,51,52,53,54,55,56,57,64,67,69,93,95,99,103,104,105,106,107,108,109,111,128,130,145,150,155,157,158,159,160,162,164,168,175,179,182,183,189,190,194,195,201,202,208,210,214,218,219,220,221,224,226,229,231,232,233,234,243,244,247,248,],[35,-2,-6,-7,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,35,-81,-61,-63,-1,-3,-4,-5,-8,-9,35,-34,-60,-62,35,-64,-65,-66,-67,35,35,35,35,35,35,35,35,-54,-55,-56,-57,-58,-59,141,35,-106,-72,35,35,-80,-82,-106,-84,35,35,35,35,-53,-83,35,141,35,35,-29,-28,-79,141,-36,-100,-85,-42,-44,-45,-43,-52,-27,35,35,35,35,35,-46,-98,-99,]),'FLOAT':([0,3,7,8,11,12,13,14,15,16,17,18,19,20,21,26,40,41,42,43,44,45,46,49,52,53,54,55,56,57,64,67,69,93,95,99,103,104,105,106,107,108,109,128,130,145,150,155,157,158,159,160,162,164,168,175,179,182,183,190,194,195,201,202,210,214,218,219,220,221,224,226,229,231,232,233,234,243,244,247,248,],[36,-2,-6,-7,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,36,-81,-1,-3,-4,-5,-8,-9,36,-34,36,-64,-65,-66,-67,36,36,36,36,36,36,36,36,-54,-55,-56,-57,-58,-59,36,-106,-72,36,36,-80,-82,-106,-84,36,36,36,36,-53,-83,36,36,36,-29,-28,-79,-36,-100,-85,-42,-44,-45,-43,-52,-27,36,36,36,36,36,-46,-98,-99,]),'PUBLIC':([0,3,7,8,11,12,13,14,15,16,17,18,19,20,26,40,41,42,43,44,45,49,60,67,81,95,116,117,118,119,130,145,150,155,157,158,159,160,162,164,175,179,182,183,194,195,201,202,210,214,218,219,220,221,224,226,229,232,233,234,241,242,243,244,247,248,],[37,-2,-6,-7,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-81,-1,-3,-4,-5,-8,-9,-34,-86,37,37,37,37,-76,-77,-78,-106,-72,37,37,-80,-82,-106,-84,37,37,37,-53,-83,37,37,-29,-28,-79,-36,-100,-85,-42,-44,-45,-43,-52,-27,37,37,37,-87,-88,37,-46,-98,-99,]),'PROTECTED':([0,3,7,8,11,12,13,14,15,16,17,18,19,20,26,40,41,42,43,44,45,49,60,67,81,95,116,117,118,119,130,145,150,155,157,158,159,160,162,164,175,179,182,183,194,195,201,202,210,214,218,219,220,221,224,226,229,232,233,234,241,242,243,244,247,248,],[38,-2,-6,-7,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-81,-1,-3,-4,-5,-8,-9,-34,-86,38,38,38,38,-76,-77,-78,-106,-72,38,38,-80,-82,-106,-84,38,38,38,-53,-83,38,38,-29,-28,-79,-36,-100,-85,-42,-44,-45,-43,-52,-27,38,38,38,-87,-88,38,-46,-98,-99,]),'PRIVATE':([0,3,7,8,11,12,13,14,15,16,17,18,19,20,26,40,41,42,43,44,45,49,60,67,81,95,116,117,118,119,130,145,150,155,157,158,159,160,162,164,175,179,182,183,194,195,201,202,210,214,218,219,220,221,224,226,229,232,233,234,241,242,243,244,247,248,],[39,-2,-6,-7,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-81,-1,-3,-4,-5,-8,-9,-34,-86,39,39,39,39,-76,-77,-78,-106,-72,39,39,-80,-82,-106,-84,39,39,39,-53,-83,39,39,-29,-28,-79,-36,-100,-85,-42,-44,-45,-43,-52,-27,39,39,39,-87,-88,39,-46,-98,-99,]),'$end':([1,3,7,8,11,12,13,14,15,16,17,18,19,20,26,40,41,42,43,44,45,49,130,145,157,158,159,160,179,182,195,201,202,210,214,218,219,220,221,224,226,229,244,247,248,],[0,-2,-6,-7,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-81,-1,-3,-4,-5,-8,-9,-34,-106,-72,-80,-82,-106,-84,-53,-83,-29,-28,-79,-36,-100,-85,-42,-44,-45,-43,-52,-27,-46,-98,-99,]),'SEMI':([2,4,5,6,9,10,17,22,23,26,35,36,47,48,50,51,60,72,73,74,75,76,101,102,129,136,165,166,167,181,191,204,206,209,240,],[40,41,42,43,44,45,-62,-69,-60,-81,-61,-63,-31,-33,-60,-62,-86,-68,-23,-24,-25,-26,-30,-32,157,-47,-35,-37,-38,202,210,219,224,226,244,]),'RBRACE':([3,7,8,11,12,13,14,15,16,17,18,19,20,26,35,36,40,41,42,43,44,45,49,50,51,60,67,94,95,96,114,115,116,117,118,119,130,131,134,136,145,146,150,155,157,158,159,160,162,164,174,175,179,180,182,183,184,188,194,195,196,201,202,203,210,213,214,218,219,220,221,224,226,229,232,233,234,236,237,238,241,242,243,244,245,247,248,],[-2,-6,-7,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-81,-61,-63,-1,-3,-4,-5,-8,-9,-34,-60,-62,-86,-106,130,-21,-22,145,-73,-75,-76,-77,-78,-106,-20,163,-47,-72,-74,-106,-106,-80,-82,-106,-84,-106,-106,195,-106,-53,201,-83,-106,204,206,-106,-29,214,-28,-79,218,-36,229,-100,-85,-42,-44,-45,-43,-52,-27,-106,-106,-106,240,241,242,-87,-88,-106,-46,246,-98,-99,]),'PLUS':([17,22,23,26,35,36,50,51,73,],[-62,53,-60,-81,-61,-63,-60,-62,53,]),'MINUS':([17,22,23,26,35,36,50,51,73,],[-62,54,-60,-81,-61,-63,-60,-62,54,]),'TIMES':([17,22,23,26,35,36,50,51,73,],[-62,55,-60,-81,-61,-63,-60,-62,55,]),'DIVIDE':([17,22,23,26,35,36,50,51,73,],[-62,56,-60,-81,-61,-63,-60,-62,56,]),'LPAREN':([21,28,29,30,33,34,62,77,78,79,82,144,152,171,172,177,222,],[46,63,64,65,68,69,83,110,111,112,121,170,176,192,193,199,231,]),'STRING':([21,26,35,36,46,50,51,57,65,110,111,189,208,],[48,-81,-61,-63,71,-60,-62,74,92,137,142,142,142,]),'error':([21,],[49,]),'RPAREN':([22,26,35,36,50,51,63,70,71,72,83,84,85,86,87,88,90,98,100,111,121,125,126,132,136,137,138,139,143,148,149,154,156,163,170,189,192,193,197,198,205,207,211,212,217,225,230,235,],[-69,-81,-61,-63,-60,-62,-106,101,102,-68,122,123,124,-93,-94,-95,127,133,135,-106,-106,-106,-96,161,-47,165,166,167,169,173,-97,-92,181,-49,191,-39,-106,-106,215,-103,-48,-40,227,228,124,-41,-102,239,]),'SET':([23,58,66,178,],[57,80,93,200,]),'LT':([26,35,36,50,51,73,91,],[-81,-61,-63,-60,-62,104,104,]),'GT':([26,35,36,50,51,73,91,],[-81,-61,-63,-60,-62,105,105,]),'LE':([26,35,36,50,51,73,91,],[-81,-61,-63,-60,-62,106,106,]),'GE':([26,35,36,50,51,73,91,],[-81,-61,-63,-60,-62,107,107,]),'EQ':([26,35,36,50,51,73,91,],[-81,-61,-63,-60,-62,108,108,]),'NE':([26,35,36,50,51,73,91,],[-81,-61,-63,-60,-62,109,109,]),'COMMA':([26,35,36,50,51,85,86,92,126,149,189,198,],[-81,-61,-63,-60,-62,-97,125,128,-96,-97,208,216,]),'LBRACE':([32,59,69,122,127,133,135,151,161,173,185,186,187,215,223,227,228,239,],[67,81,99,150,155,162,164,175,183,194,99,-104,-105,-101,232,233,234,243,]),'READLINE':([57,],[77,]),'ARRAY':([57,],[78,]),'TYPE':([63,121,125,192,193,],[89,89,89,89,89,]),'EXCEPTION':([68,],[97,]),'NEW':([80,],[113,]),'USE':([123,],[152,]),'ARROW':([124,140,141,142,169,],[153,168,-50,-51,190,]),'CONSTRUCT':([147,],[172,]),'AND':([163,],[186,]),'OR':([163,],[187,]),'ELSEIF':([204,246,],[222,222,]),'ELSE':([204,246,],[223,223,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statement':([0,67,95,150,155,162,164,175,183,194,232,233,234,243,],[1,95,95,95,95,95,95,95,95,95,95,95,95,95,]),'print':([0,67,95,150,155,162,164,175,183,194,232,233,234,243,],[2,2,2,2,2,2,2,2,2,2,2,2,2,2,]),'print_error':([0,67,95,150,155,162,164,175,183,194,232,233,234,243,],[3,3,3,3,3,3,3,3,3,3,3,3,3,3,]),'declaration':([0,67,95,150,155,162,164,175,183,194,232,233,234,243,],[4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'input':([0,67,95,150,155,162,164,175,183,194,232,233,234,243,],[5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'expression':([0,57,67,93,95,128,150,155,162,164,175,183,190,194,232,233,234,243,],[6,75,6,129,6,156,6,6,6,6,6,6,209,6,6,6,6,6,]),'object_declaration':([0,67,95,150,155,162,164,175,183,194,232,233,234,243,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'class_declaration':([0,67,95,150,155,162,164,175,183,194,232,233,234,243,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'array_declaration':([0,67,95,150,155,162,164,175,183,194,232,233,234,243,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'property_declaration':([0,67,81,95,116,150,155,162,164,175,183,194,232,233,234,243,],[10,10,117,10,117,10,10,10,10,10,10,10,10,10,10,10,]),'function_statement':([0,67,95,150,155,162,164,175,183,194,232,233,234,243,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'function_variable':([0,67,95,150,155,162,164,175,183,194,232,233,234,243,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'function_anonymous':([0,67,95,150,155,162,164,175,183,194,232,233,234,243,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'function_arrow':([0,67,95,150,153,155,162,164,175,183,194,232,233,234,243,],[14,14,14,14,179,14,14,14,14,14,14,14,14,14,14,]),'while':([0,67,95,150,155,162,164,175,183,194,232,233,234,243,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'constant_declaration':([0,67,95,150,155,162,164,175,183,194,232,233,234,243,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'constant_use':([0,21,46,52,57,64,67,69,93,95,99,103,128,150,155,162,164,168,175,183,190,194,231,232,233,234,243,],[17,51,51,51,51,51,17,51,51,17,51,51,51,17,17,17,17,51,17,17,51,17,51,17,17,17,17,]),'try_catch':([0,67,95,150,155,162,164,175,183,194,232,233,234,243,],[18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'catch_item':([0,67,95,130,150,155,159,162,164,175,183,194,232,233,234,243,],[19,19,19,159,19,19,159,19,19,19,19,19,19,19,19,19,]),'if':([0,67,95,150,155,162,164,175,183,194,232,233,234,243,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'value':([0,21,46,52,57,64,67,69,93,95,99,103,128,150,155,162,164,168,175,183,190,194,231,232,233,234,243,],[22,47,70,72,73,91,22,91,22,22,91,136,22,22,22,22,22,189,22,22,22,22,91,22,22,22,22,]),'visibility':([0,67,81,95,116,150,155,162,164,175,183,194,232,233,234,243,],[27,27,120,27,120,27,27,27,27,27,27,27,27,27,27,27,]),'operator':([22,73,],[52,52,]),'condition':([57,64,69,99,231,],[76,90,98,134,235,]),'parameters':([63,121,125,192,193,],[84,148,154,211,212,]),'parameter':([63,121,125,192,193,],[86,86,86,86,86,]),'empty':([63,67,95,111,121,125,130,150,155,159,162,164,175,183,192,193,194,232,233,234,243,],[88,96,96,139,88,88,160,96,96,160,96,96,96,96,88,88,96,96,96,96,96,]),'statements':([67,95,150,155,162,164,175,183,194,232,233,234,243,],[94,131,174,180,184,188,196,203,213,236,237,238,245,]),'conditions':([69,185,],[100,205,]),'comparison_operator':([73,91,],[103,103,]),'class_body':([81,],[114,]),'class_member_list':([81,116,],[115,146,]),'class_member':([81,116,],[116,116,]),'method_declaration':([81,116,],[118,118,]),'constructor_declaration':([81,116,],[119,119,]),'arrayArg':([111,189,208,],[138,207,225,]),'index':([111,189,208,],[140,140,140,]),'use_clause_opt':([123,],[151,]),'catch_list':([130,159,],[158,182,]),'logical_operator':([163,],[185,]),'variables':([176,216,],[197,230,]),'elseif':([204,246,],[220,247,]),'else':([204,246,],[221,248,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement","S'",1,None,None,None),
  ('statement -> print SEMI','statement',2,'p_statement','parser.py',17),
  ('statement -> print_error','statement',1,'p_statement','parser.py',18),
  ('statement -> declaration SEMI','statement',2,'p_statement','parser.py',19),
  ('statement -> input SEMI','statement',2,'p_statement','parser.py',20),
  ('statement -> expression SEMI','statement',2,'p_statement','parser.py',21),
  ('statement -> object_declaration','statement',1,'p_statement','parser.py',22),
  ('statement -> class_declaration','statement',1,'p_statement','parser.py',23),
  ('statement -> array_declaration SEMI','statement',2,'p_statement','parser.py',24),
  ('statement -> property_declaration SEMI','statement',2,'p_statement','parser.py',25),
  ('statement -> function_statement','statement',1,'p_statement','parser.py',26),
  ('statement -> function_variable','statement',1,'p_statement','parser.py',27),
  ('statement -> function_anonymous','statement',1,'p_statement','parser.py',28),
  ('statement -> function_arrow','statement',1,'p_statement','parser.py',29),
  ('statement -> while','statement',1,'p_statement','parser.py',30),
  ('statement -> constant_declaration','statement',1,'p_statement','parser.py',31),
  ('statement -> constant_use','statement',1,'p_statement','parser.py',32),
  ('statement -> try_catch','statement',1,'p_statement','parser.py',33),
  ('statement -> catch_item','statement',1,'p_statement','parser.py',34),
  ('statement -> if','statement',1,'p_statement','parser.py',35),
  ('statements -> statement statements','statements',2,'p_statements','parser.py',39),
  ('statements -> statement','statements',1,'p_statements','parser.py',40),
  ('statements -> empty','statements',1,'p_statements','parser.py',41),
  ('declaration -> VARIABLE SET value','declaration',3,'p_declaration','parser.py',44),
  ('declaration -> VARIABLE SET STRING','declaration',3,'p_declaration','parser.py',45),
  ('declaration -> VARIABLE SET expression','declaration',3,'p_declaration','parser.py',46),
  ('declaration -> VARIABLE SET condition','declaration',3,'p_declaration','parser.py',47),
  ('function_statement -> visibility FUNCTION IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE','function_statement',9,'p_function_statement','parser.py',50),
  ('while -> WHILE LPAREN condition RPAREN LBRACE statements RBRACE','while',7,'p_while','parser.py',54),
  ('function_variable -> FUNCTION VARIABLE LPAREN RPAREN LBRACE statements RBRACE','function_variable',7,'p_function_variable','parser.py',59),
  ('print -> ECHO LPAREN value RPAREN','print',4,'p_print','parser.py',65),
  ('print -> ECHO value','print',2,'p_print','parser.py',66),
  ('print -> ECHO LPAREN STRING RPAREN','print',4,'p_print','parser.py',67),
  ('print -> ECHO STRING','print',2,'p_print','parser.py',68),
  ('print_error -> ECHO error','print_error',2,'p_print_error','parser.py',78),
  ('input -> VARIABLE SET READLINE LPAREN STRING RPAREN','input',6,'p_input','parser.py',87),
  ('object_declaration -> VAR VARIABLE SET NEW CLASS LPAREN RPAREN SEMI','object_declaration',8,'p_object_declaration','parser.py',91),
  ('array_declaration -> VARIABLE SET ARRAY LPAREN arrayArg RPAREN','array_declaration',6,'p_array_declaration','parser.py',95),
  ('array_declaration -> VARIABLE SET ARRAY LPAREN empty RPAREN','array_declaration',6,'p_array_declaration','parser.py',96),
  ('arrayArg -> index ARROW value','arrayArg',3,'p_arrayArg','parser.py',100),
  ('arrayArg -> index ARROW value arrayArg','arrayArg',4,'p_arrayArg','parser.py',101),
  ('arrayArg -> index ARROW value COMMA arrayArg','arrayArg',5,'p_arrayArg','parser.py',102),
  ('if -> IF LPAREN condition RPAREN LBRACE statements RBRACE SEMI','if',8,'p_if','parser.py',107),
  ('if -> IF LPAREN conditions RPAREN LBRACE statements RBRACE SEMI','if',8,'p_if','parser.py',108),
  ('if -> IF LPAREN condition RPAREN LBRACE statements RBRACE elseif','if',8,'p_if','parser.py',109),
  ('if -> IF LPAREN condition RPAREN LBRACE statements RBRACE else','if',8,'p_if','parser.py',110),
  ('else -> ELSE LBRACE statements RBRACE SEMI','else',5,'p_else','parser.py',118),
  ('condition -> value comparison_operator value','condition',3,'p_condition','parser.py',122),
  ('conditions -> LBRACE condition RBRACE logical_operator conditions','conditions',5,'p_conditions','parser.py',136),
  ('conditions -> LBRACE condition RBRACE','conditions',3,'p_conditions','parser.py',137),
  ('index -> INTEGER','index',1,'p_index','parser.py',140),
  ('index -> STRING','index',1,'p_index','parser.py',141),
  ('function_arrow -> VARIABLE SET FUNCTION LPAREN VARIABLE RPAREN ARROW expression SEMI','function_arrow',9,'p_function_arrow','parser.py',146),
  ('function_arrow -> FUNCTION LPAREN VARIABLE RPAREN ARROW function_arrow','function_arrow',6,'p_function_arrow','parser.py',147),
  ('comparison_operator -> LT','comparison_operator',1,'p_comparison_operator','parser.py',152),
  ('comparison_operator -> GT','comparison_operator',1,'p_comparison_operator','parser.py',153),
  ('comparison_operator -> LE','comparison_operator',1,'p_comparison_operator','parser.py',154),
  ('comparison_operator -> GE','comparison_operator',1,'p_comparison_operator','parser.py',155),
  ('comparison_operator -> EQ','comparison_operator',1,'p_comparison_operator','parser.py',156),
  ('comparison_operator -> NE','comparison_operator',1,'p_comparison_operator','parser.py',157),
  ('value -> VARIABLE','value',1,'p_value','parser.py',161),
  ('value -> INTEGER','value',1,'p_value','parser.py',162),
  ('value -> constant_use','value',1,'p_value','parser.py',163),
  ('value -> FLOAT','value',1,'p_value','parser.py',164),
  ('operator -> PLUS','operator',1,'p_operator','parser.py',179),
  ('operator -> MINUS','operator',1,'p_operator','parser.py',180),
  ('operator -> TIMES','operator',1,'p_operator','parser.py',181),
  ('operator -> DIVIDE','operator',1,'p_operator','parser.py',182),
  ('expression -> value operator value','expression',3,'p_expression','parser.py',185),
  ('expression -> value','expression',1,'p_expression','parser.py',186),
  ('expressions -> expression COMMA expressions','expressions',3,'p_expressions','parser.py',223),
  ('expressions -> expression','expressions',1,'p_expressions','parser.py',224),
  ('class_declaration -> CLASS IDENTIFIER LBRACE class_body RBRACE','class_declaration',5,'p_class_declaration','parser.py',227),
  ('class_body -> class_member_list','class_body',1,'p_class_body','parser.py',231),
  ('class_member_list -> class_member class_member_list','class_member_list',2,'p_class_member_list','parser.py',235),
  ('class_member_list -> class_member','class_member_list',1,'p_class_member_list','parser.py',236),
  ('class_member -> property_declaration','class_member',1,'p_class_member','parser.py',240),
  ('class_member -> method_declaration','class_member',1,'p_class_member','parser.py',241),
  ('class_member -> constructor_declaration','class_member',1,'p_class_member','parser.py',242),
  ('constant_declaration -> DEFINE LPAREN STRING COMMA expression RPAREN SEMI','constant_declaration',7,'p_constant_declaration','parser.py',247),
  ('constant_declaration -> CONST IDENTIFIER SET expression SEMI','constant_declaration',5,'p_constant_declaration','parser.py',248),
  ('constant_use -> IDENTIFIER','constant_use',1,'p_constant_use','parser.py',266),
  ('try_catch -> TRY LBRACE statements RBRACE catch_list','try_catch',5,'p_try_catch','parser.py',275),
  ('catch_list -> catch_item catch_list','catch_list',2,'p_catch_list','parser.py',279),
  ('catch_list -> empty','catch_list',1,'p_catch_list','parser.py',280),
  ('catch_item -> CATCH LPAREN EXCEPTION VARIABLE RPAREN LBRACE statements RBRACE','catch_item',8,'p_catch_item','parser.py',287),
  ('property_declaration -> visibility VARIABLE','property_declaration',2,'p_property_declaration','parser.py',309),
  ('method_declaration -> visibility FUNCTION IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE','method_declaration',9,'p_method_declaration','parser.py',312),
  ('constructor_declaration -> visibility FUNCTION CONSTRUCT LPAREN parameters RPAREN LBRACE statements RBRACE','constructor_declaration',9,'p_constructor_declaration','parser.py',315),
  ('visibility -> PUBLIC','visibility',1,'p_visibility','parser.py',319),
  ('visibility -> PROTECTED','visibility',1,'p_visibility','parser.py',320),
  ('visibility -> PRIVATE','visibility',1,'p_visibility','parser.py',321),
  ('parameters -> parameter COMMA parameters','parameters',3,'p_parameters','parser.py',325),
  ('parameters -> parameter','parameters',1,'p_parameters','parser.py',326),
  ('parameters -> IDENTIFIER','parameters',1,'p_parameters','parser.py',327),
  ('parameters -> empty','parameters',1,'p_parameters','parser.py',328),
  ('parameter -> TYPE VARIABLE','parameter',2,'p_parameter','parser.py',332),
  ('parameter -> VARIABLE','parameter',1,'p_parameter','parser.py',333),
  ('elseif -> ELSEIF LPAREN condition RPAREN LBRACE statements RBRACE elseif','elseif',8,'p_elseif','parser.py',338),
  ('elseif -> ELSEIF LPAREN condition RPAREN LBRACE statements RBRACE else','elseif',8,'p_elseif','parser.py',339),
  ('function_anonymous -> FUNCTION LPAREN parameters RPAREN use_clause_opt LBRACE statements RBRACE','function_anonymous',8,'p_function_anonymous','parser.py',344),
  ('use_clause_opt -> USE LPAREN variables RPAREN','use_clause_opt',4,'p_use_clause_opt','parser.py',348),
  ('variables -> VARIABLE COMMA variables','variables',3,'p_variables','parser.py',352),
  ('variables -> VARIABLE','variables',1,'p_variables','parser.py',353),
  ('logical_operator -> AND','logical_operator',1,'p_logical_operator','parser.py',357),
  ('logical_operator -> OR','logical_operator',1,'p_logical_operator','parser.py',358),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',361),
]
